{"version":3,"file":"static/js/103.6d39b54e.chunk.js","mappings":"2QAEMA,EAAgBC,EAAAA,GAAAA,QAAH,mEAKbC,EAAcD,EAAAA,GAAAA,GAAH,qE,SCmBjB,EArBa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,qGACQC,EAAAA,EAAAA,MADR,OACLC,EADK,OAEXJ,EAAUI,GAFC,2CAAH,qDAIVF,GACD,GAAE,KAGD,2BACE,UAACP,EAAD,YACE,SAACE,EAAD,8BACA,SAACQ,EAAA,EAAD,CAAYD,KAAML,QAIzB,C,2aCrBKO,EAAmBV,EAAAA,GAAAA,GAAH,wKAUhBW,EAAsBX,EAAAA,GAAAA,GAAH,0JAWnBY,EAAaZ,EAAAA,GAAAA,KAAH,sEAKVa,EAAcb,EAAAA,GAAAA,MAAH,wKASXc,EAAkBd,EAAAA,GAAAA,OAAH,uLASfe,GAAmBf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,sVAwBhBiB,GALsBjB,EAAAA,GAAAA,IAAH,4EAKEA,EAAAA,GAAAA,IAAH,8EAMlBD,EAAgBC,EAAAA,GAAAA,IAAH,oDAIbkB,EAAclB,EAAAA,GAAAA,IAAH,+CAIXmB,EAAcnB,EAAAA,GAAAA,EAAH,wDAKXoB,EAAkBpB,EAAAA,GAAAA,KAAH,kHAMfC,EAAcD,EAAAA,GAAAA,GAAH,yFAMXqB,EAAuBrB,EAAAA,GAAAA,GAAH,kGAOpBsB,GAAuBtB,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,iK,8FCzGpBS,EAAa,SAAC,GAAc,IAAZD,EAAW,EAAXA,KACde,GAAWC,EAAAA,EAAAA,MAEjB,GAAKhB,EAIL,OACE,SAAC,KAAD,UACGA,EAAKiB,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAiBC,GAAkB,EAA/BC,MAA+B,EAAxBC,KAAwB,EAAlBF,aAC5B,OACE,SAAC,KAAD,CAAMG,GAAE,kBAAaJ,GAAeK,MAAO,CAAEC,KAAMT,GAAnD,UACE,SAAC,KAAD,WACE,gBACEU,IAAG,yCAAoCN,GACvCO,IAAI,QAJsBR,EAUnC,KAGN,C,+LC1BKS,EAAU,mCAEV5B,EAAa,mCAAG,oGACG6B,EAAAA,EAAAA,IAAA,kEACsCD,IAFzC,cACdE,EADc,yBAIbA,EAAS7B,KAAK8B,SAJD,2CAAH,qDAObC,EAAS,mCAAG,WAAMb,GAAN,uFACOU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,oBAC+BS,EAD/B,oBADP,cACVE,EADU,yBAITA,EAAS7B,MAJA,2CAAH,sDAOTgC,EAAW,mCAAG,WAAMd,GAAN,uFACKU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,4BACuCS,EADvC,oBADL,cACZE,EADY,yBAIXA,EAAS7B,MAJE,2CAAH,sDAOXiC,EAAY,mCAAG,WAAMf,GAAN,uFACIU,EAAAA,EAAAA,IAAA,6CACiBV,EADjB,4BACuCS,EADvC,oBADJ,cACbE,EADa,yBAIZA,EAAS7B,MAJG,2CAAH,sDAOZkC,EAAW,mCAAG,WAAMC,GAAN,uFACKP,EAAAA,EAAAA,IAAA,6DACiCD,EADjC,iCACiEQ,IAFtE,cACZN,EADY,yBAIXA,EAAS7B,MAJE,2CAAH,qD","sources":["components/Home/Home.styled.jsx","components/Home/Home.jsx","components/Movies/Movies.styled.jsx","components/Movies/MoviesList.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  max-width: 1200px;\n  margin: 0px auto;\n`;\n\nconst StyledTitle = styled.h1`\n  padding-top: 80px;\n  text-align: center;\n`;\n\nexport { StyledSection, StyledTitle };\n","import { MoviesList } from 'components/Movies/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrending } from '../../services/api';\nimport { StyledSection, StyledTitle } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const func = async () => {\n      const data = await fetchTrending();\n      setMovies(data);\n    };\n    func();\n  }, []);\n\n  return (\n    <main>\n      <StyledSection>\n        <StyledTitle>Trending today</StyledTitle>\n        <MoviesList data={movies} />\n      </StyledSection>\n    </main>\n  );\n};\n\nexport default Home;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledMoviesList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-top: 20px;\n  padding: 0px 20px;\n  justify-content: center;\n`;\n\nconst StyledMoviesElement = styled.li`\n  width: 200px;\n\n  transition: all linear 250ms;\n\n  &:hover {\n    border: 2px solid white;\n    transform: scale(1.1);\n  }\n`;\n\nconst StyledForm = styled.form`\n  text-align: center;\n  padding-top: 100px;\n`;\n\nconst StyledInput = styled.input`\n  outline: none;\n  padding: 10px;\n  margin-right: 3px;\n  border: none;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n\nconst StyledSearchBtn = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: white;\n  cursor: pointer;\n`;\n\nconst StyledBackButton = styled(Link)`\n  text-decoration: none;\n  border: none;\n  border-radius: 10px;\n  padding: 10px 30px;\n  background-color: rgba(79, 79, 88, 0.9);\n  color: white;\n  font-size: 20px;\n  margin: 15px 0px;\n  cursor: pointer;\n\n  transition: all linear 250ms;\n\n  &:hover {\n    background-color: #fefefe;\n    color: black;\n  }\n`;\n\nconst StyledBackgroundDiv = styled.div`\n  background-color: #c3c3c3;\n  padding: 0px 15px;\n`;\n\nconst StyledMovieInfoDiv = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nconst StyledSection = styled.div`\n  /* padding-top: 80px; */\n`;\n\nconst StyledMovie = styled.div`\n  padding: 80px 15px;\n`;\n\nconst StyledGenre = styled.p`\n  display: flex;\n  gap: 20px;\n`;\n\nconst StyledGenreItem = styled.span`\n  padding: 10px 20px;\n  background-color: rgba(79, 79, 88, 0.9);\n  border-radius: 5px;\n`;\n\nconst StyledTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 36px;\n  line-height: 1.5;\n`;\n\nconst StyledCastReviewList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  margin-top: 30px;\n`;\n\nconst StyledCastReviewLink = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  padding: 5px 10px;\n  background-color: #b2bec3;\n  border-radius: 5px;\n  color: black;\n`;\n\nexport {\n  StyledMoviesList,\n  StyledMoviesElement,\n  StyledForm,\n  StyledBackButton,\n  StyledBackgroundDiv,\n  StyledMovieInfoDiv,\n  StyledSection,\n  StyledMovie,\n  StyledGenre,\n  StyledGenreItem,\n  StyledInput,\n  StyledSearchBtn,\n  StyledTitle,\n  StyledCastReviewList,\n  StyledCastReviewLink,\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { StyledMoviesList, StyledMoviesElement } from './Movies.styled';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  if (!data) {\n    return;\n  }\n\n  return (\n    <StyledMoviesList>\n      {data.map(({ id, title, name, poster_path }) => {\n        return (\n          <Link to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <StyledMoviesElement>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt=\"\"\n              />\n              {/* <p>{title ? title : name}</p> */}\n            </StyledMoviesElement>\n          </Link>\n        );\n      })}\n    </StyledMoviesList>\n  );\n};\n\nexport { MoviesList };\n\nMoviesList.propTypes = {\n  data: PropTypes.array,\n  id: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'fc5d692a2d0f42e5af832afd0b70affe';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data;\n};\n\nexport { fetchTrending, fetchById, fetchActors, fetchReviews, fetchByName };\n"],"names":["StyledSection","styled","StyledTitle","useState","movies","setMovies","useEffect","func","fetchTrending","data","MoviesList","StyledMoviesList","StyledMoviesElement","StyledForm","StyledInput","StyledSearchBtn","StyledBackButton","Link","StyledMovieInfoDiv","StyledMovie","StyledGenre","StyledGenreItem","StyledCastReviewList","StyledCastReviewLink","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","API_KEY","axios","response","results","fetchById","fetchActors","fetchReviews","fetchByName","query"],"sourceRoot":""}