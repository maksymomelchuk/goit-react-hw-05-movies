{"version":3,"file":"static/js/736.795cbb83.chunk.js","mappings":"2QAEMA,EAAmBC,EAAAA,GAAAA,GAAH,oJAShBC,EAAkBD,EAAAA,GAAAA,GAAH,yC,SCoCrB,EAzCa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,IARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,qGACQC,EAAAA,EAAAA,IAAYJ,GADpB,OACLK,EADK,OAEXN,EAAUM,GAFC,2CAAH,qDAIVF,GACD,GAAE,CAACH,IAECF,EAIL,OACE,gBAAKE,GAAG,MAAR,UACE,SAACN,EAAD,UACGI,EAAOQ,KAAKC,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACtC,OACE,UAACd,EAAD,YACE,gBACEe,IACEF,EAAY,yCAC0BA,GAClC,qEAENG,IAAI,GACJC,MAAM,SAER,kCAAUL,MACV,uCAAeE,OAXKF,EAczB,OAIR,C,+LC3CKM,EAAU,mCAEVC,EAAa,mCAAG,oGACGC,EAAAA,EAAAA,IAAA,kEACsCF,IAFzC,cACdG,EADc,yBAIbA,EAASZ,KAAKa,SAJD,2CAAH,qDAObC,EAAS,mCAAG,WAAMnB,GAAN,uFACOgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,oBAC+Bc,EAD/B,oBADP,cACVG,EADU,yBAITA,EAASZ,MAJA,2CAAH,sDAOTD,EAAW,mCAAG,WAAMJ,GAAN,uFACKgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,4BACuCc,EADvC,oBADL,cACZG,EADY,yBAIXA,EAASZ,MAJE,2CAAH,sDAOXe,EAAY,mCAAG,WAAMpB,GAAN,uFACIgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,4BACuCc,EADvC,oBADJ,cACbG,EADa,yBAIZA,EAASZ,MAJG,2CAAH,sDAOZgB,EAAW,mCAAG,WAAMC,GAAN,uFACKN,EAAAA,EAAAA,IAAA,6DACiCF,EADjC,iCACiEQ,IAFtE,cACZL,EADY,yBAIXA,EAASZ,MAJE,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledActorsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  padding: 80px 20px;\n`;\n\nconst StyledActorCard = styled.li`\n  width: 150px;\n`;\n\nexport { StyledActorsList, StyledActorCard };\n","import { fetchActors } from 'services/api';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { StyledActorsList, StyledActorCard } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const func = async () => {\n      const data = await fetchActors(id);\n      setActors(data);\n    };\n    func();\n  }, [id]);\n\n  if (!actors) {\n    return;\n  }\n\n  return (\n    <div id=\"box\">\n      <StyledActorsList>\n        {actors.cast.map(({ name, profile_path, character }) => {\n          return (\n            <StyledActorCard key={name}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://vogue.ua/i/image_720x/upload/inner/482/1416478482.jpg.webp'\n                }\n                alt=\"\"\n                width=\"150\"\n              />\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </StyledActorCard>\n          );\n        })}\n      </StyledActorsList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'fc5d692a2d0f42e5af832afd0b70affe';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data;\n};\n\nexport { fetchTrending, fetchById, fetchActors, fetchReviews, fetchByName };\n"],"names":["StyledActorsList","styled","StyledActorCard","useState","actors","setActors","id","useParams","useEffect","func","fetchActors","data","cast","map","name","profile_path","character","src","alt","width","API_KEY","fetchTrending","axios","response","results","fetchById","fetchReviews","fetchByName","query"],"sourceRoot":""}