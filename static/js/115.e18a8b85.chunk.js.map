{"version":3,"file":"static/js/115.e18a8b85.chunk.js","mappings":"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","sources":["components/Movies/Movies.jsx","components/Movies/Movies.styled.jsx","components/Movies/MoviesList.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { StyledForm, StyledInput, StyledSearchBtn } from './Movies.styled';\nimport { fetchByName } from 'services/api';\nimport { MoviesList } from './MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query' ?? '');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const func = async () => {\n      const data = await fetchByName(movieName);\n      setMovies(data.results);\n    };\n    func();\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.input.value });\n  };\n\n  const handleChange = event => {\n    setInput(event.target.value);\n  };\n\n  const visibleMovies = movies;\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          value={input}\n          type=\"text\"\n          name=\"input\"\n          onChange={handleChange}\n        />\n        <StyledSearchBtn type=\"submit\">Search</StyledSearchBtn>\n      </StyledForm>\n      <MoviesList data={visibleMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledMoviesList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-top: 20px;\n  padding: 0px 20px;\n  justify-content: center;\n`;\n\nconst StyledMoviesElement = styled.li`\n  width: 200px;\n\n  transition: all linear 250ms;\n\n  &:hover {\n    border: 2px solid white;\n    transform: scale(1.1);\n  }\n`;\n\nconst StyledForm = styled.form`\n  text-align: center;\n  padding-top: 100px;\n`;\n\nconst StyledInput = styled.input`\n  outline: none;\n  padding: 10px;\n  margin-right: 3px;\n  border: none;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n\nconst StyledSearchBtn = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: white;\n  cursor: pointer;\n`;\n\nconst StyledBackButton = styled(Link)`\n  text-decoration: none;\n  border: none;\n  border-radius: 10px;\n  padding: 10px 30px;\n  background-color: rgba(79, 79, 88, 0.9);\n  color: white;\n  font-size: 20px;\n  margin: 15px 0px;\n  cursor: pointer;\n\n  transition: all linear 250ms;\n\n  &:hover {\n    background-color: #fefefe;\n    color: black;\n  }\n`;\n\nconst StyledBackgroundDiv = styled.div`\n  background-color: #c3c3c3;\n  padding: 0px 15px;\n`;\n\nconst StyledMovieInfoDiv = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nconst StyledSection = styled.div`\n  /* padding-top: 80px; */\n`;\n\nconst StyledMovie = styled.div`\n  padding: 80px 15px;\n`;\n\nconst StyledGenre = styled.p`\n  display: flex;\n  gap: 20px;\n`;\n\nconst StyledGenreItem = styled.span`\n  padding: 10px 20px;\n  background-color: rgba(79, 79, 88, 0.9);\n  border-radius: 5px;\n`;\n\nconst StyledTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 36px;\n  line-height: 1.5;\n`;\n\nconst StyledCastReviewList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  margin-top: 30px;\n`;\n\nconst StyledCastReviewLink = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  padding: 5px 10px;\n  background-color: #b2bec3;\n  border-radius: 5px;\n  color: black;\n`;\n\nexport {\n  StyledMoviesList,\n  StyledMoviesElement,\n  StyledForm,\n  StyledBackButton,\n  StyledBackgroundDiv,\n  StyledMovieInfoDiv,\n  StyledSection,\n  StyledMovie,\n  StyledGenre,\n  StyledGenreItem,\n  StyledInput,\n  StyledSearchBtn,\n  StyledTitle,\n  StyledCastReviewList,\n  StyledCastReviewLink,\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { StyledMoviesList, StyledMoviesElement } from './Movies.styled';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  if (!data) {\n    return;\n  }\n\n  return (\n    <StyledMoviesList>\n      {data.map(({ id, title, name, poster_path }) => {\n        return (\n          <Link to={`/movies/${id}`} key={id} state={{ from: location }}>\n            <StyledMoviesElement>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt=\"\"\n              />\n              {/* <p>{title ? title : name}</p> */}\n            </StyledMoviesElement>\n          </Link>\n        );\n      })}\n    </StyledMoviesList>\n  );\n};\n\nexport { MoviesList };\n\nMoviesList.propTypes = {\n  data: PropTypes.array,\n  id: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'fc5d692a2d0f42e5af832afd0b70affe';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data;\n};\n\nexport { fetchTrending, fetchById, fetchActors, fetchReviews, fetchByName };\n"],"names":["useState","input","setInput","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","func","fetchByName","data","results","visibleMovies","onSubmit","event","preventDefault","query","target","value","type","name","onChange","StyledMoviesList","styled","StyledMoviesElement","StyledForm","StyledInput","StyledSearchBtn","StyledBackButton","Link","StyledMovieInfoDiv","StyledSection","StyledMovie","StyledGenre","StyledGenreItem","StyledTitle","StyledCastReviewList","StyledCastReviewLink","MoviesList","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","API_KEY","fetchTrending","axios","response","fetchById","fetchActors","fetchReviews"],"sourceRoot":""}